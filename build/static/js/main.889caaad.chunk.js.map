{"version":3,"sources":["images/headshot.png","Components/NavBar/NavBar.js","Components/SectionHeading/SectionHeading.js","Components/AboutMe/AboutMe.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","href","SectionHeading","title","paragraph","AboutMe","headshot","alt","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,sC,sJCmC5BC,MAjCf,WACE,OACE,oCACE,yBAAKC,UAAU,iDACb,4BACEA,UAAU,iBACVC,KAAK,SACLC,cAAY,WACZC,cAAY,sBACZC,gBAAc,qBACdC,gBAAc,QACdC,aAAW,qBAEX,0BAAMN,UAAU,yBAElB,yBAAKA,UAAU,2BAA2BO,GAAG,sBAC3C,yBAAKP,UAAU,cACb,uBAAGA,UAAU,kBAAkBQ,KAAK,KAApC,QACO,0BAAMR,UAAU,WAAhB,cAEP,uBAAGA,UAAU,WAAWQ,KAAK,KAA7B,YAGA,uBAAGR,UAAU,WAAWQ,KAAK,KAA7B,gBCRGC,MAff,YAA6C,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,UAC9B,OACE,oCACE,yBAAKX,UAAU,6BACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,aAAaU,GAC3B,uBAAGV,UAAU,QACVW,O,gBCgBEC,MArBf,WACI,OACI,oCACA,kBAAC,EAAD,CACAF,MAAM,kBACNC,UAAU,qDAEV,yBAAKX,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YACX,yBAAKQ,KAAMK,IAAUC,IAAI,qBAE7B,yBAAKd,UAAU,YACX,4jB,MCFLe,MAVf,WACE,OACE,oCACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCGgBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,SD2HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.889caaad.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/headshot.bbc27ec8.png\";","import React from \"react\";\n\nfunction NavBar() {\n  return (\n    <>\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarNavAltMarkup\"\n          aria-controls=\"navbarNavAltMarkup\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n          <div className=\"navbar-nav\">\n            <a className=\"nav-link active\" href=\"#\">\n              Home <span className=\"sr-only\">(current)</span>\n            </a>\n            <a className=\"nav-link\" href=\"#\">\n              Projects\n            </a>\n            <a className=\"nav-link\" href=\"#\">\n              Contact\n            </a>\n          </div>\n        </div>\n      </nav>\n    </>\n  );\n}\n\nexport default NavBar;\n","import React from \"react\";\n\nfunction SectionHeading({title, paragraph}) {\n  return (\n    <>\n      <div className=\"jumbotron jumbotron-fluid\">\n        <div className=\"container\">\n          <h1 className=\"display-4\">{title}</h1>\n          <p className=\"lead\">\n            {paragraph}\n          </p>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default SectionHeading;\n","import React from \"react\"\nimport SectionHeading from \"../SectionHeading/SectionHeading\"\nimport headshot from \"../../images/headshot.png\";\n\nfunction AboutMe() {\n    return(\n        <>\n        <SectionHeading \n        title=\"Allana Anderson\"\n        paragraph=\"I am a fullstack website developer. Plz hire me.\"\n        />\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-4\">\n                    <img href={headshot} alt=\"Allana headshot\"/>\n                </div>\n                <div className=\"col-md-8\">\n                    <p>I am a full stack website developer leveraging the many skills gained as a teacher and technical skills learned as a recent recipient of a certificate in full stack website development from the University of Denver. Along with a comprehensive knowledge of JavaScript, CSS, HTML, React.js, and responsive web design, I am known by friends and coworkers as an extremely resilient, fast-learning, easy and enjoyable to work with team member looking to develop apps and websites that minimize and streamline the workload of everyday humans.</p>\n                </div>\n            </div>\n        </div>\n        </>\n    );\n};\n\nexport default AboutMe;","import React from 'react';\nimport NavBar from \"./Components/NavBar/NavBar\";\nimport AboutMe from \"./Components/AboutMe/AboutMe\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <>\n    <NavBar />\n    <AboutMe />\n    </>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}